/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bouncy;

import java.awt.*;
import java.awt.event.*;
import javax.swing.Timer;
import java.util.Random;
/**
 *
 * @author yogeshwar
 */
public class BounCy extends javax.swing.JFrame {

    /**
     * Creates new form BounCy
     */
    
    private int Ball_X, Ball_Y, Ball_X_ax, Ball_Y_ax;
    private int Bat_X, Bat_Y, Bat_Width, Bat_Height, Bat_ax;
    private int Ball_Len;
    private int Screen_Left, Screen_Right, Screen_Top, Screen_Bottom;
	
    private final  Timer t;
    private boolean gameOn,keyListener_Lock;
    private Random r;
    
    public BounCy() {
        initComponents();
        
        setTitle("BounCy");
	gameOn=false;
	t=new Timer(5, (ActionEvent e) -> {
            repaint();
        });
	this.setFocusable(true);
		
	this.addKeyListener(new KeyAdapter(){
        @Override
	public void keyPressed(KeyEvent e)
	{
            switch(e.getKeyCode())
            {
		case KeyEvent.VK_RIGHT:
                    //System.out.print("RIGHT");
                    if(gameOn && Bat_X <= Screen_Right - Bat_Width - Bat_ax)
			Bat_X += Bat_ax;
                    break;
		case KeyEvent.VK_LEFT:
                    //System.out.print("LEFT");
                    if(gameOn && Bat_X >= Screen_Left + Bat_ax)
			Bat_X -= Bat_ax;
                    break;
		case KeyEvent.VK_ENTER:
                    gameOn = true;
                    gameInit();
                    break;
		default:
            }
	}
	});
    }
    private void gameInit()
    {
		Bat_Width = 100;
		Bat_Height = 10;
		Ball_Len=20;

		Screen_Left = Screen_Top = 0;
		Screen_Right = this.getWidth();
		Screen_Bottom = this.getHeight();
		
		Bat_X = (Screen_Left + Screen_Right - Bat_Width) / 2 ;
		Bat_Y = 9 * (Screen_Top + Screen_Bottom) / 10;//(Screen_Top + Screen_Bottom - Bat_Height) / 2 ;
		Bat_ax = 5;
		
		Ball_X = (Screen_Left + Screen_Right) / 20;
		Ball_Y = (Screen_Top + Screen_Bottom) / 20;
		Ball_X_ax = Ball_Y_ax = 1;
		
		t.start();
		gameOn = true;
    }
    @Override
    public void paint(Graphics g)
    {
		Screen_Right = this.getWidth();
		Screen_Bottom = this.getHeight();
		g.setColor(Color.red);
		g.fillRect(0, 0, Screen_Right - Screen_Left - 1, Screen_Bottom - Screen_Top - 1);
		g.setColor(Color.blue);
		g.fillRect(Bat_X, Bat_Y, Bat_Width, Bat_Height);
		if(gameOn)
		{
			//showStatus("GAME ON :: MOVE THE BAT with  <-  or  -> ");
			if(Ball_Y >= Bat_Y + Bat_Height)
			{
				g.setColor(Color.black);
				g.fillRect(Ball_X, Ball_Y, Ball_Len, Ball_Len);
				//System.out.println("GAME OVER");
				//showStatus("GAME OVER :: PRESS ENTER TO RESTART");
				t.stop();
				gameOn=false;
			}
			else
			{   
				if(Ball_X > Bat_X - Ball_Len && Ball_X < Bat_X + Bat_Width)// to bounce off top and bottom of the bat
				{
					if(Ball_Y == Bat_Y - Ball_Len || Ball_Y == Bat_Y + Bat_Height)
						Ball_Y_ax *= -1;
				}
				if(Ball_Y > Bat_Y - Ball_Len && Ball_Y < Bat_Y + Bat_Height)// to bounce off left and right of the bat
				{
					if(Ball_X == Bat_X - Ball_Len || Ball_X == Bat_X + Bat_Width)
						Ball_X_ax *= -1;
				}
				if(Ball_X > Bat_X - Ball_Len && Ball_X < Bat_X + Bat_Width && Ball_Y == Bat_Y - Ball_Len && Ball_Y == Bat_Y + Bat_Height)// to bounce off the corners of the bat
					Ball_Y_ax *= -1;
				if(Ball_X <= Screen_Left)
					Ball_X_ax = 1;
				else if(Ball_X >= Screen_Right - Ball_Len)
					Ball_X_ax = -1;
				if(Ball_Y <= Screen_Top)
					Ball_Y_ax = 1;
				else if(Ball_Y >= Screen_Bottom - Ball_Len)
					Ball_Y_ax = -1;
				g.setColor(Color.green);
				g.fillRect(Ball_X += Ball_X_ax, Ball_Y += Ball_Y_ax, Ball_Len, Ball_Len);
			}
		}
		else
		{
			welcomePaint();
			g.setColor(Color.black);
			g.fillRect(Ball_X, Ball_Y, Ball_Len, Ball_Len);
		}
    }
	
    private void welcomePaint()
    {
		System.out.println(".");
		Graphics g = this.getGraphics();
		g.setColor(Color.white);
		g.fillRect(this.getWidth()/5, this.getHeight()/3, 3*(this.getWidth()/5), this.getHeight()/3);
		g.setColor(Color.black);
		g.setFont(new Font("SansSerif", Font.BOLD, 24));
		FontMetrics fm = g.getFontMetrics();
		int x = this.getWidth()/5 + (3*(this.getWidth()/5) - fm.stringWidth("BounCY")) / 2;
		int y = this.getHeight()/3 + (fm.getAscent() + (this.getHeight()/3 - (fm.getAscent() + fm.getDescent()))/2);
		g.drawString("BounCY",x,y);
		//showStatus("Press Enter to  :: Start the Game ::");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BounCy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BounCy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BounCy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BounCy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BounCy().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
